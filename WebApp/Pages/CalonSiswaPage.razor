@page "/calon"
@using Microsoft.EntityFrameworkCore;
@using WebApp.Validators;
@attribute [Authorize(Roles = "Admin")]

@inject ApplicationDbContext dbcontext
@inject DialogService dialogService
@inject NotificationService NotificationService
@inject NavigationManager nav

<h3>Data Calon Siswa</h3>

<RadzenDataGrid @ref="dg" AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false"
                FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                Data="@datas"
                TItem="CalonPesertaDidik" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or">
    <Columns>
        <RadzenDataGridColumn TItem="CalonPesertaDidik" Property="Nama" Title="Nama" />
        <RadzenDataGridColumn TItem="CalonPesertaDidik" Width="100px" Property="JenisKelamin" Title="JK" />
        <RadzenDataGridColumn TItem="CalonPesertaDidik" Width="200px" Title="TTL">
            <Template>
                @($"{context.TempatLahir}, {context.TanggalLahir.ToString("dd/MM/yyyy")}")
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="CalonPesertaDidik" Width="120px" Property="Kepercayaan" Title="Agama" />
        <RadzenDataGridColumn TItem="CalonPesertaDidik" Property="Ayah.Nama" Title="Ayah" />
        <RadzenDataGridColumn TItem="CalonPesertaDidik" Width="60px">
            <Template>
                <RadzenButton Click="@(()=> nav.NavigateTo($"/calon/{context.Id}"))" Icon="details" ButtonStyle="ButtonStyle.Warning" />
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

@code {

    ICollection<CalonPesertaDidik> datas = new List<CalonPesertaDidik>();
    RadzenDataGrid<CalonPesertaDidik> dg;
    protected override async Task OnInitializedAsync()
    {
        var source = dbcontext.CalonPesertaDidik
        .Include(x => x.Alamat)
        .Include(x => x.Periodik)
        .Include(x => x.Kontak)
        .Include(x => x.Ayah)
        .Include(x => x.Ibu)
        .ToList();
        var validator = new CalonPesertaDidikValidator();
        foreach (var item in source)
        {
            var validatorResult = validator.Validate(item);
            if (validatorResult.IsValid)
            {
                datas.Add(item);           
            }
        }
    }

    async Task Delete(CalonPesertaDidik model)
    {
        var dialog = await dialogService.Confirm("Yakin Hapus Data ?", "Delete", new ConfirmOptions() { OkButtonText = "Yes", CancelButtonText = "No" });
        if (dialog!=null && dialog.Value)
        {
           
        }
    }


}
